终端机在文法中未使用

    AND
    OR


语法

    0 $accept: program $end

    1 program: function
    2        | program function

    3 function: INT IDENT '(' param_list ')' compound_stmt

    4 compound_stmt: '{' stmt_list '}'

    5 stmt_list: %empty
    6          | stmt_list stmt

    7 stmt: decl ';'
    8     | IDENT '=' expr ';'
    9     | IDENT '(' expr_list ')' ';'
   10     | IF '(' expr ')' compound_stmt ELSE compound_stmt
   11     | IF '(' expr ')' compound_stmt
   12     | WHILE '(' expr ')' compound_stmt
   13     | BREAK ';'
   14     | CONTINUE ';'
   15     | RETURN expr ';'

   16 decl: INT decl_list

   17 decl_list: declarator
   18          | decl_list ',' declarator

   19 declarator: IDENT
   20           | IDENT '=' expr

   21 expr_list: expr
   22          | expr_list ',' expr

   23 param_list: %empty
   24           | INT IDENT
   25           | param_list ',' INT IDENT

   26 expr: INT_CONST
   27     | IDENT
   28     | IDENT '(' expr_list ')'
   29     | expr EQ expr
   30     | expr NE expr
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '<' expr
   34     | expr '>' expr
   35     | expr '*' expr
   36     | expr '/' expr
   37     | expr '%' expr
   38     | expr LE expr
   39     | expr GE expr
   40     | '(' expr ')'


终结语词，附有它们出现处的规则

    $end (0) 0
    '%' (37) 37
    '(' (40) 3 9 10 11 12 28 40
    ')' (41) 3 9 10 11 12 28 40
    '*' (42) 35
    '+' (43) 31
    ',' (44) 18 22 25
    '-' (45) 32
    '/' (47) 36
    ';' (59) 7 8 9 13 14 15
    '<' (60) 33
    '=' (61) 8 20
    '>' (62) 34
    '{' (123) 4
    '}' (125) 4
    error (256)
    INT_CONST <ival> (258) 26
    IDENT <sval> (259) 3 8 9 19 20 24 25 27 28
    INT (260) 3 16 24 25
    RETURN (261) 15
    IF (262) 10 11
    ELSE (263) 10
    WHILE (264) 12
    BREAK (265) 13
    CONTINUE (266) 14
    LE (267) 38
    GE (268) 39
    EQ (269) 29
    NE (270) 30
    AND (271)
    OR (272)


非终结语词，附有它们出现处的规则

    $accept (32)
        on left: 0
    program <ast> (33)
        on left: 1 2
        on right: 0 2
    function <ast> (34)
        on left: 3
        on right: 1 2
    compound_stmt <ast> (35)
        on left: 4
        on right: 3 10 11 12
    stmt_list <ast> (36)
        on left: 5 6
        on right: 4 6
    stmt <ast> (37)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 6
    decl <ast> (38)
        on left: 16
        on right: 7
    decl_list <ast> (39)
        on left: 17 18
        on right: 16 18
    declarator <ast> (40)
        on left: 19 20
        on right: 17 18
    expr_list <elist> (41)
        on left: 21 22
        on right: 9 22 28
    param_list <plist> (42)
        on left: 23 24 25
        on right: 3 25
    expr <ast> (43)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 8 10 11 12 15 20 21 22 29 30 31 32 33 34 35 36 37 38 39 40


状态 0

    0 $accept: . program $end

    INT  偏移，并进入状态 1

    program   转到状态 2
    function  转到状态 3


状态 1

    3 function: INT . IDENT '(' param_list ')' compound_stmt

    IDENT  偏移，并进入状态 4


状态 2

    0 $accept: program . $end
    2 program: program . function

    $end  偏移，并进入状态 5
    INT   偏移，并进入状态 1

    function  转到状态 6


状态 3

    1 program: function .

    $default  使用规则 1 以归约 (program)


状态 4

    3 function: INT IDENT . '(' param_list ')' compound_stmt

    '('  偏移，并进入状态 7


状态 5

    0 $accept: program $end .

    $default  接受


状态 6

    2 program: program function .

    $default  使用规则 2 以归约 (program)


状态 7

    3 function: INT IDENT '(' . param_list ')' compound_stmt

    INT  偏移，并进入状态 8

    $default  使用规则 23 以归约 (param_list)

    param_list  转到状态 9


状态 8

   24 param_list: INT . IDENT

    IDENT  偏移，并进入状态 10


状态 9

    3 function: INT IDENT '(' param_list . ')' compound_stmt
   25 param_list: param_list . ',' INT IDENT

    ')'  偏移，并进入状态 11
    ','  偏移，并进入状态 12


状态 10

   24 param_list: INT IDENT .

    $default  使用规则 24 以归约 (param_list)


状态 11

    3 function: INT IDENT '(' param_list ')' . compound_stmt

    '{'  偏移，并进入状态 13

    compound_stmt  转到状态 14


状态 12

   25 param_list: param_list ',' . INT IDENT

    INT  偏移，并进入状态 15


状态 13

    4 compound_stmt: '{' . stmt_list '}'

    $default  使用规则 5 以归约 (stmt_list)

    stmt_list  转到状态 16


状态 14

    3 function: INT IDENT '(' param_list ')' compound_stmt .

    $default  使用规则 3 以归约 (function)


状态 15

   25 param_list: param_list ',' INT . IDENT

    IDENT  偏移，并进入状态 17


状态 16

    4 compound_stmt: '{' stmt_list . '}'
    6 stmt_list: stmt_list . stmt

    IDENT     偏移，并进入状态 18
    INT       偏移，并进入状态 19
    RETURN    偏移，并进入状态 20
    IF        偏移，并进入状态 21
    WHILE     偏移，并进入状态 22
    BREAK     偏移，并进入状态 23
    CONTINUE  偏移，并进入状态 24
    '}'       偏移，并进入状态 25

    stmt  转到状态 26
    decl  转到状态 27


状态 17

   25 param_list: param_list ',' INT IDENT .

    $default  使用规则 25 以归约 (param_list)


状态 18

    8 stmt: IDENT . '=' expr ';'
    9     | IDENT . '(' expr_list ')' ';'

    '('  偏移，并进入状态 28
    '='  偏移，并进入状态 29


状态 19

   16 decl: INT . decl_list

    IDENT  偏移，并进入状态 30

    decl_list   转到状态 31
    declarator  转到状态 32


状态 20

   15 stmt: RETURN . expr ';'

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 36


状态 21

   10 stmt: IF . '(' expr ')' compound_stmt ELSE compound_stmt
   11     | IF . '(' expr ')' compound_stmt

    '('  偏移，并进入状态 37


状态 22

   12 stmt: WHILE . '(' expr ')' compound_stmt

    '('  偏移，并进入状态 38


状态 23

   13 stmt: BREAK . ';'

    ';'  偏移，并进入状态 39


状态 24

   14 stmt: CONTINUE . ';'

    ';'  偏移，并进入状态 40


状态 25

    4 compound_stmt: '{' stmt_list '}' .

    $default  使用规则 4 以归约 (compound_stmt)


状态 26

    6 stmt_list: stmt_list stmt .

    $default  使用规则 6 以归约 (stmt_list)


状态 27

    7 stmt: decl . ';'

    ';'  偏移，并进入状态 41


状态 28

    9 stmt: IDENT '(' . expr_list ')' ';'

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr_list  转到状态 42
    expr       转到状态 43


状态 29

    8 stmt: IDENT '=' . expr ';'

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 44


状态 30

   19 declarator: IDENT .
   20           | IDENT . '=' expr

    '='  偏移，并进入状态 45

    $default  使用规则 19 以归约 (declarator)


状态 31

   16 decl: INT decl_list .
   18 decl_list: decl_list . ',' declarator

    ','  偏移，并进入状态 46

    $default  使用规则 16 以归约 (decl)


状态 32

   17 decl_list: declarator .

    $default  使用规则 17 以归约 (decl_list)


状态 33

   26 expr: INT_CONST .

    $default  使用规则 26 以归约 (expr)


状态 34

   27 expr: IDENT .
   28     | IDENT . '(' expr_list ')'

    '('  偏移，并进入状态 47

    $default  使用规则 27 以归约 (expr)


状态 35

   40 expr: '(' . expr ')'

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 48


状态 36

   15 stmt: RETURN expr . ';'
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59
    ';'  偏移，并进入状态 60


状态 37

   10 stmt: IF '(' . expr ')' compound_stmt ELSE compound_stmt
   11     | IF '(' . expr ')' compound_stmt

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 61


状态 38

   12 stmt: WHILE '(' . expr ')' compound_stmt

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 62


状态 39

   13 stmt: BREAK ';' .

    $default  使用规则 13 以归约 (stmt)


状态 40

   14 stmt: CONTINUE ';' .

    $default  使用规则 14 以归约 (stmt)


状态 41

    7 stmt: decl ';' .

    $default  使用规则 7 以归约 (stmt)


状态 42

    9 stmt: IDENT '(' expr_list . ')' ';'
   22 expr_list: expr_list . ',' expr

    ')'  偏移，并进入状态 63
    ','  偏移，并进入状态 64


状态 43

   21 expr_list: expr .
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    $default  使用规则 21 以归约 (expr_list)


状态 44

    8 stmt: IDENT '=' expr . ';'
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59
    ';'  偏移，并进入状态 65


状态 45

   20 declarator: IDENT '=' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 66


状态 46

   18 decl_list: decl_list ',' . declarator

    IDENT  偏移，并进入状态 30

    declarator  转到状态 67


状态 47

   28 expr: IDENT '(' . expr_list ')'

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr_list  转到状态 68
    expr       转到状态 43


状态 48

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr
   40     | '(' expr . ')'

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59
    ')'  偏移，并进入状态 69


状态 49

   38 expr: expr LE . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 70


状态 50

   39 expr: expr GE . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 71


状态 51

   29 expr: expr EQ . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 72


状态 52

   30 expr: expr NE . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 73


状态 53

   33 expr: expr '<' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 74


状态 54

   34 expr: expr '>' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 75


状态 55

   31 expr: expr '+' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 76


状态 56

   32 expr: expr '-' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 77


状态 57

   35 expr: expr '*' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 78


状态 58

   36 expr: expr '/' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 79


状态 59

   37 expr: expr '%' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 80


状态 60

   15 stmt: RETURN expr ';' .

    $default  使用规则 15 以归约 (stmt)


状态 61

   10 stmt: IF '(' expr . ')' compound_stmt ELSE compound_stmt
   11     | IF '(' expr . ')' compound_stmt
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59
    ')'  偏移，并进入状态 81


状态 62

   12 stmt: WHILE '(' expr . ')' compound_stmt
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59
    ')'  偏移，并进入状态 82


状态 63

    9 stmt: IDENT '(' expr_list ')' . ';'

    ';'  偏移，并进入状态 83


状态 64

   22 expr_list: expr_list ',' . expr

    INT_CONST  偏移，并进入状态 33
    IDENT      偏移，并进入状态 34
    '('        偏移，并进入状态 35

    expr  转到状态 84


状态 65

    8 stmt: IDENT '=' expr ';' .

    $default  使用规则 8 以归约 (stmt)


状态 66

   20 declarator: IDENT '=' expr .
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    $default  使用规则 20 以归约 (declarator)


状态 67

   18 decl_list: decl_list ',' declarator .

    $default  使用规则 18 以归约 (decl_list)


状态 68

   22 expr_list: expr_list . ',' expr
   28 expr: IDENT '(' expr_list . ')'

    ')'  偏移，并进入状态 85
    ','  偏移，并进入状态 64


状态 69

   40 expr: '(' expr ')' .

    $default  使用规则 40 以归约 (expr)


状态 70

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   38     | expr LE expr .
   39     | expr . GE expr

    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    LE   错误 (非相联的)
    GE   错误 (非相联的)
    '<'  错误 (非相联的)
    '>'  错误 (非相联的)

    $default  使用规则 38 以归约 (expr)


状态 71

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr
   39     | expr GE expr .

    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    LE   错误 (非相联的)
    GE   错误 (非相联的)
    '<'  错误 (非相联的)
    '>'  错误 (非相联的)

    $default  使用规则 39 以归约 (expr)


状态 72

   29 expr: expr . EQ expr
   29     | expr EQ expr .
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    EQ  错误 (非相联的)
    NE  错误 (非相联的)

    $default  使用规则 29 以归约 (expr)


状态 73

   29 expr: expr . EQ expr
   30     | expr . NE expr
   30     | expr NE expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    EQ  错误 (非相联的)
    NE  错误 (非相联的)

    $default  使用规则 30 以归约 (expr)


状态 74

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   33     | expr '<' expr .
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    LE   错误 (非相联的)
    GE   错误 (非相联的)
    '<'  错误 (非相联的)
    '>'  错误 (非相联的)

    $default  使用规则 33 以归约 (expr)


状态 75

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   34     | expr '>' expr .
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    LE   错误 (非相联的)
    GE   错误 (非相联的)
    '<'  错误 (非相联的)
    '>'  错误 (非相联的)

    $default  使用规则 34 以归约 (expr)


状态 76

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    $default  使用规则 31 以归约 (expr)


状态 77

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    $default  使用规则 32 以归约 (expr)


状态 78

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   35     | expr '*' expr .
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    $default  使用规则 35 以归约 (expr)


状态 79

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   36     | expr '/' expr .
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    $default  使用规则 36 以归约 (expr)


状态 80

   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   37     | expr '%' expr .
   38     | expr . LE expr
   39     | expr . GE expr

    $default  使用规则 37 以归约 (expr)


状态 81

   10 stmt: IF '(' expr ')' . compound_stmt ELSE compound_stmt
   11     | IF '(' expr ')' . compound_stmt

    '{'  偏移，并进入状态 13

    compound_stmt  转到状态 86


状态 82

   12 stmt: WHILE '(' expr ')' . compound_stmt

    '{'  偏移，并进入状态 13

    compound_stmt  转到状态 87


状态 83

    9 stmt: IDENT '(' expr_list ')' ';' .

    $default  使用规则 9 以归约 (stmt)


状态 84

   22 expr_list: expr_list ',' expr .
   29 expr: expr . EQ expr
   30     | expr . NE expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '*' expr
   36     | expr . '/' expr
   37     | expr . '%' expr
   38     | expr . LE expr
   39     | expr . GE expr

    LE   偏移，并进入状态 49
    GE   偏移，并进入状态 50
    EQ   偏移，并进入状态 51
    NE   偏移，并进入状态 52
    '<'  偏移，并进入状态 53
    '>'  偏移，并进入状态 54
    '+'  偏移，并进入状态 55
    '-'  偏移，并进入状态 56
    '*'  偏移，并进入状态 57
    '/'  偏移，并进入状态 58
    '%'  偏移，并进入状态 59

    $default  使用规则 22 以归约 (expr_list)


状态 85

   28 expr: IDENT '(' expr_list ')' .

    $default  使用规则 28 以归约 (expr)


状态 86

   10 stmt: IF '(' expr ')' compound_stmt . ELSE compound_stmt
   11     | IF '(' expr ')' compound_stmt .

    ELSE  偏移，并进入状态 88

    $default  使用规则 11 以归约 (stmt)


状态 87

   12 stmt: WHILE '(' expr ')' compound_stmt .

    $default  使用规则 12 以归约 (stmt)


状态 88

   10 stmt: IF '(' expr ')' compound_stmt ELSE . compound_stmt

    '{'  偏移，并进入状态 13

    compound_stmt  转到状态 89


状态 89

   10 stmt: IF '(' expr ')' compound_stmt ELSE compound_stmt .

    $default  使用规则 10 以归约 (stmt)
